name: pipeline

on:
  push:
    branches:
      - main

jobs:
  SAST:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Perform Initial Analysis (if Project Created)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        REPO_NAME: ${{ github.event.repository.name }}
      run: |
        echo "Realizando análisis inicial en la rama main..."
        npx sonarqube-scanner \
          -Dsonar.projectKey=$REPO_NAME \
          -Dsonar.organization=claudiocorrear \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.branch.name=main \
          -Dsonar.sources=. \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

    - name: Validate Quality Gate
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        REPO_NAME: ${{ github.event.repository.name }}
      run: |
        echo "Validando el estado del Quality Gate..."
        vulnerabilities=$(curl -s -u "$SONAR_TOKEN:" \
          "https://sonarcloud.io/api/issues/search?componentKeys=$REPO_NAME&types=VULNERABILITY&severities=CRITICAL,BLOCKER,MAJOR,MINOR" | jq -r '.total')
        if [ "$vulnerabilities" -gt 0 ]; then
          echo "Se encontraron $vulnerabilities vulnerabilidades críticas, altas o medias. El proyecto no cumple con los estándares de seguridad."
          exit 1
        fi
  SCA:
    needs: SAST
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: "${{ github.event.repository.name }}"
          path: '.'
          format: 'HTML'
          args: |
            --out ./reports
            --failOnCVSS 5
            --enableRetired

      - name: Upload Test Result
        uses: actions/upload-artifact@master
        with:
          name: Depcheck Report
          path: ./reports
  DockerBuild:
    needs: SCA
    runs-on: ubuntu-24.04
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker Build
      run: |
        docker build --tag claudiocorrea/laboratorio-final:latest .
    - name: Push Docker
      run: |
        docker push claudiocorrea/laboratorio-final:latest
  DockerScan:
    needs: DockerBuild
    runs-on: ubuntu-24.04
    steps:
    
    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Pull Docker
      run: |
        docker pull claudiocorrea/laboratorio-final:latest

    - name: Run Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'claudiocorrea/laboratorio-final:latest'
        format: 'table'
        severity: 'CRITICAL,HIGH,MEDIUM'
        exit-code: 1
